jobs:
    Build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Set up JDK 8
              uses: actions/setup-java@v2
              with:
                  distribution: "adopt"
                  java-version: "8"
            - name: Cache Gradle packages # cache gradle and ant files for quick builds.
              uses: actions/cache@v2
              with:
                  key: ${{runner.os}}-gradle-caches
                  path: |
                      .m2
                      .gradle
                      /home/runner/.liferay
            - name: Set SAIN_EXTENSION_VERSION env # this version comes from release-sain.properties
              run: >
                  echo "SAIN_EXTENSION_VERSION="$(grep "sain.release.extension.version" release-sain.properties |
                  cut -d'=' -f2) >> $GITHUB_ENV
            - name: Set SAIN_DOCKER_VERSION env # this version comes from release-sain.properties
              run: >
                  echo "SAIN_DOCKER_VERSION="$(grep "sain.docker.release.version" release-sain.properties |
                  cut -d'=' -f2) >> $GITHUB_ENV
            - name: Set SAIN_EXTENSION_NEXUS_URL env # this version comes from release-sain.properties
              run: >
                  echo "SAIN_EXTENSION_NEXUS_URL="$(grep "sain.extensions.nexus.url" release-sain.properties |
                  cut -d'=' -f2) >> $GITHUB_ENV
            - name: Set SAIN_EXTENSION_REPO env # this version comes from release-sain.properties
              run: >
                  echo "SAIN_EXTENSION_REPO="$(grep "sain.extensions.repo.name" release-sain.properties |
                  cut -d'=' -f2) >> $GITHUB_ENV
            - name: echo SAIN_EXTENSION_VERSION # we print it to be sure that is set correctly
              run: echo ${{env.SAIN_EXTENSION_VERSION}}
            - name: echo SAIN_DOCKER_VERSION # we print it to be sure that is set correctly
              run: echo ${{env.SAIN_DOCKER_VERSION}}
            - name: echo SAIN_EXTENSION_NEXUS_URL # we print it to be sure that is set correctly
              run: echo ${{env.SAIN_EXTENSION_NEXUS_URL}}
            - name: echo SAIN_EXTENSION_REPO # we print it to be sure that is set correctly
              run: echo ${{env.SAIN_EXTENSION_REPO}}
            - name: create backup from build.properties file
              run: mv build.properties build.properties.bak
            - name: Change Some Values in build.properties File
              run: >
                  cat build.properties.bak |
                  sed 's/#baseline.jar.report.level=off/baseline.jar.report.level=off/g ;
                  s/baseline.jar.report.level=persist/#baseline.jar.report.level=persist/g ;
                  s/org.gradle.daemon=true/org.gradle.daemon=false/g'
                  > build.properties
            - env:
                  ANT_OPTS: "-Xmx2g"
              name: Build with Ant
              run: ant compile install-portal-snapshots
            - env:
                  ANT_OPTS: "-Xmx4g"
              name: run module builder script # you should list your module names in this file for compile
              run: bash ../module-builder.sh
              working-directory: ./modules
            - name: move files to SAIN-Bundles # before create docker image, we should move those files to here.
              run: mkdir SAIN-bundles && mv /home/runner/work/liferay-portal/bundles/ SAIN-bundles/
            - name: get tar extensions from nexus repository
              run: >
                  wget --user `echo ${{secrets.SAIN_FTP_USER}}`
                  --password `echo ${{secrets.SAIN_FTP_PASS}}`
                  https://${{secrets.SAIN_REPO_URL}}/
                  repository/${{secrets.SAIN_EXTENSION_NEXUS_URL}}/
                  ${{env.SAIN_EXTENSION_REPO}}/${{env.SAIN_EXTENSION_VERSION}}/
                  ${{env.SAIN_EXTENSION_REPO}}-${{env.SAIN_EXTENSION_VERSION}}.tar.gz
            - name: get md5 hash of tar extensions from nexus repository
              run: >
                  wget --user `echo ${{secrets.SAIN_FTP_USER}}`
                  --password `echo ${{secrets.SAIN_FTP_PASS}}`
                  https://${{secrets.SAIN_REPO_URL}}/
                  repository/${{secrets.SAIN_EXTENSION_NEXUS_URL}}/
                  ${{env.SAIN_EXTENSION_REPO}}/${{env.SAIN_EXTENSION_VERSION}}/
                  ${{env.SAIN_EXTENSION_REPO}}-${{env.SAIN_EXTENSION_VERSION}}.tar.gz.md5
            - name: checksum of artifact
              run: >
                  cat ${{env.SAIN_EXTENSION_REPO}}-${{env.SAIN_EXTENSION_VERSION}}.tar.gz.md5 |
                  md5sum -c - || exit 1
            - name: uncompress artifacts
              run: >
                  mkdir SAIN-modules &&
                  tar -xzf ${{env.SAIN_EXTENSION_REPO}}-${{env.SAIN_EXTENSION_VERSION}}.tar.gz
                  --directory=SAIN-modules
            - name: Login to Docker Hub
              uses: docker/login-action@v1
              with:
                  password: ${{secrets.DOCKER_HUB_PASSWORD}}
                  username: ${{secrets.DOCKER_HUB_USERNAME}}
            - name: Login to SAIN repository
              uses: docker/login-action@v1
              with:
                  password: ${{secrets.SAIN_REPO_PASSWORD}}
                  registry: ${{secrets.SAIN_REPO_URL}}
                  username: ${{secrets.SAIN_REPO_USERNAME}}
            - id: buildx
              name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1
            - id: docker_build
              if: ${{github.event_name == 'release' && github.event.action == 'prereleased'}}
              name: Build and push with version tag
              uses: docker/build-push-action@v2
              with:
                  context: ./
                  file: ./Dockerfile
                  push: true
                  tags: ${{secrets.SAIN_REPO_URL}}/liferay/portal-737-ga8:${{env.SAIN_DOCKER_VERSION}}
            - id: docker_build
              if: ${{github.event_name == 'release' && github.event.action == 'released'}}
              name: Build and push with latest tag (Runs ONLY in published releases)
              uses: docker/build-push-action@v2
              with:
                  context: ./
                  file: ./Dockerfile
                  push: true
                  tags: |
                      ${{secrets.SAIN_REPO_URL}}/liferay/portal-737-ga8:latest
                      ${{secrets.SAIN_REPO_URL}}/liferay/portal-737-ga8:${{env.SAIN_MODULE_VERSION}}
name: "Liferay CI Build Docker Image - Running on Release"
on:
    release:
        types:
            - released # when new release in this branch was created, workflow is run.
            - prereleased