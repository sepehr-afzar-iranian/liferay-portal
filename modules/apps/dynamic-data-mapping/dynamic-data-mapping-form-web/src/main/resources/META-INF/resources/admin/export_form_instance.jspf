<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
String csvExport = "enabled-with-warning";

if (Validator.isNotNull(ddmFormAdminDisplayContext.getCSVExport())) {
	csvExport = ddmFormAdminDisplayContext.getCSVExport();
}

boolean csvExportDisabled = StringUtil.equals("disabled", csvExport);
%>

<div class="hide" id="<portlet:namespace />exportFormInstance">
	<div class="hide" id="<portlet:namespace />csvWarning">
		<clay:alert
			displayType="warning"
			message="csv-warning-message"
		/>
	</div>

	<clay:alert
		message="timezone-warning-message"
	/>

	<clay:alert
		message="the-export-includes-data-from-all-fields-and-form-versions"
	/>

	<aui:select label="file-extension" name="fileExtension">

		<%
		Map<String, String> availableExportExtensions = ddmFormAdminDisplayContext.getAvailableExportExtensions();

		for (Map.Entry<String, String> entry : availableExportExtensions.entrySet()) {
			if (Objects.equals(entry.getKey(), "csv") && csvExportDisabled) {
				continue;
			}
		%>

			<aui:option value="<%= entry.getKey() %>"><%= entry.getValue() %></aui:option>

		<%
		}
		%>

	</aui:select>

	<%
	Calendar calendar = CalendarFactoryUtil.getCalendar(timeZone, locale);
	%>

	<aui:fieldset>
		<clay:row>
			<clay:col>
				<aui:field-wrapper label="start-date">
					<clay:row>
						<clay:col>
							<liferay-ui:input-date
								dayParam="startDateDay"
								dayValue="<%= calendar.get(Calendar.DATE) %>"
								disabled="<%= false %>"
								monthParam="startDateMonth"
								monthValue="<%= calendar.get(Calendar.MONTH) %>"
								name="startDate"
								yearParam="startDateYear"
								yearValue="<%= calendar.get(Calendar.YEAR) %>"
							/>
						</clay:col>

						<clay:col>
							<liferay-ui:input-time
								amPmParam="startDateAmPm"
								amPmValue="<%= calendar.get(Calendar.AM_PM) %>"
								disabled="<%= false %>"
								hourParam="startDateHour"
								hourValue="<%= calendar.get(Calendar.HOUR) %>"
								minuteParam="startDateMinute"
								minuteValue="<%= calendar.get(Calendar.MINUTE) %>"
								name="startTime"
							/>
						</clay:col>
					</clay:row>

					<aui:input label="set-start-date" name="startEnable" onClick='<%= liferayPortletResponse.getNamespace() + "EnableDisableInputs(this,'start');" %>' type="checkbox" value="<%= true %>" />
				</aui:field-wrapper>
			</clay:col>

			<clay:col>
				<aui:field-wrapper label="end-date">
					<clay:row>
						<clay:col>
							<liferay-ui:input-date
								dayParam="endDateDay"
								dayValue="<%= calendar.get(Calendar.DATE) %>"
								disabled="<%= false %>"
								monthParam="endDateMonth"
								monthValue="<%= calendar.get(Calendar.MONTH) %>"
								name="endDate"
								yearParam="endDateYear"
								yearValue="<%= calendar.get(Calendar.YEAR) %>"
							/>
						</clay:col>

						<clay:col>
							<liferay-ui:input-time
								amPmParam="endDateAmPm"
								amPmValue="<%= calendar.get(Calendar.AM_PM) %>"
								disabled="<%= false %>"
								hourParam="endDateHour"
								hourValue="<%= calendar.get(Calendar.HOUR) %>"
								minuteParam="endDateMinute"
								minuteValue="<%= calendar.get(Calendar.MINUTE) %>"
								name="endTime"
							/>
						</clay:col>
					</clay:row>

					<aui:input label="set-end-date" name="endEnable" onClick='<%= liferayPortletResponse.getNamespace() + "EnableDisableInputs(this,'end');" %>' type="checkbox" value="<%= true %>" />
				</aui:field-wrapper>
			</clay:col>
		</clay:row>
	</aui:fieldset>
</div>

<aui:script>
	Liferay.provide(
		window,
		'<portlet:namespace />exportFormInstance',
		function (url) {
			var A = AUI();

			var form = A.Node.create('<form />');

			form.attr('method', 'POST');

			var content = A.one('#<portlet:namespace />exportFormInstance');

			var fileExtensionSelect = A.one('#<portlet:namespace />fileExtension');

			var setValueOfInputs = function (name) {
				var date = document.getElementById(
					'<portlet:namespace />' + name + 'Date'
				);
				var time = document.getElementById(
					'<portlet:namespace />' + name + 'Time'
				);
				var check = document.getElementById(
					'<portlet:namespace />' + name + 'Enable'
				);
				date.disabled = true;
				time.disabled = true;
				check.checked = false;
			};

			var showCSVWarning = function () {
				var csvWarning = A.one('#<portlet:namespace />csvWarning');
				if (
					fileExtensionSelect.val() === 'csv' &&
					<%= StringUtil.equals("enabled-with-warning", csvExport) %>
				) {
					csvWarning.show();
				}
				else {
					csvWarning.hide();
				}
			};

			setValueOfInputs('start');
			setValueOfInputs('end');
			if (content) {
				if (fileExtensionSelect) {
					showCSVWarning();

					fileExtensionSelect.on('change', showCSVWarning);
				}

				form.append(content);

				content.show();
			}

			var dialog = Liferay.Util.Window.getWindow({
				dialog: {
					bodyContent: form,
					cssClass: 'ddm-form-export-modal',
					resizable: false,
					toolbars: {
						footer: [
							{
								cssClass: 'btn-secondary',
								label: '<liferay-ui:message key="cancel" />',
								on: {
									click: function () {
										dialog.hide();
									},
								},
							},
							{
								cssClass: 'btn-primary',
								label: '<liferay-ui:message key="ok" />',
								on: {
									click: function () {
										submitForm(form, url, false);

										dialog.hide();
									},
								},
							},
						],
						header: [
							{
								cssClass: 'close',
								discardDefaultButtonCssClasses: true,
								labelHTML: Liferay.Util.getLexiconIconTpl('times'),
								on: {
									click: function () {
										dialog.hide();
									},
								},
							},
						],
					},
					width: 600,
				},
				title: '<%= UnicodeLanguageUtil.get(request, "export") %>',
			});
		},
		['aui-alert', 'liferay-util-window']
	);
</aui:script>

<aui:script>
	Liferay.provide(window, '<portlet:namespace />EnableDisableInputs', function (
		check,
		name
	) {
		var date = document.getElementById('<portlet:namespace />' + name + 'Date');
		var time = document.getElementById('<portlet:namespace />' + name + 'Time');
		date.disabled = check.checked ? false : true;
		time.disabled = check.checked ? false : true;

		if (!date.disabled) {
			date.focus();
			time.focus();
		}
	});
</aui:script>